<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Kafka on minjun's memory</title><link>https://jo-minjun.github.io/tags/kafka/</link><description>Recent content in Kafka on minjun's memory</description><generator>Hugo -- gohugo.io</generator><language>kr</language><lastBuildDate>Sat, 02 Jul 2022 18:12:21 +0900</lastBuildDate><atom:link href="https://jo-minjun.github.io/tags/kafka/index.xml" rel="self" type="application/rss+xml"/><item><title>Avro schema</title><link>https://jo-minjun.github.io/notes/avro-schema/</link><pubDate>Sat, 02 Jul 2022 18:12:21 +0900</pubDate><guid>https://jo-minjun.github.io/notes/avro-schema/</guid><description>1. Avro 란? 아브로(Avro)는 아파치의 하둡 프로젝트에서 개발된 RPC 및 데이터 직렬화 프레임워크이다.
schema를 json으로 정의하여 바이너리 포맷으로 직렬화 한다.
2. 장점 데이터의 타입을 알 수 있다. 스키마가 직렬화되어 네트워크 통신에 자유롭다. 스키마에 설명이 포함되어 schema 구조를 이해하는데 도움을 준다. 다양한 language를 지원한다. (java, c, c++ 등) default 값을 정의할 수 있다. 3. Data Type 이름 태그 null no value boolean a binary value int 32bit signed integer long 62bit signed integer float single precision(단정밀도) 32bit floating-point number double double percision(배정밀도) 64bit floating-point number bytes sequence of 8-bit unsigned bytes string unicode character sequence Enums name, namespace, aliases, doc, symbols, default 등을 가진다.</description></item><item><title>Schema registry란?</title><link>https://jo-minjun.github.io/notes/schema-registry/</link><pubDate>Fri, 01 Jul 2022 21:42:30 +0900</pubDate><guid>https://jo-minjun.github.io/notes/schema-registry/</guid><description>1. Schema registry 란? 데이터 관리의 중요한 관점들 중 하나는 schema의 버전 관리이다. 응용프로그램의 시간이 지날수록 schema가 정의되기 시작한 시점부터 schema는 점점 바뀌어가고, producer와 consumer는 직접적인 관계가 끊어져있기 때문에 운영상에 발생하는 이슈가 있다.
producer는 consumer가 어떤 메세지를 소비할지 알 수 없다.
consumer는 producer가 어떤 메세지를 생산했는지 알 수 없다.
위와 같은 상황에서 producer가 갑자기 다른 schema를 이용해서 메세지를 생산할 경우, consumer는 이 메세지에 대해서 대처하지 못할 수 있다.
이는 구조적인 결합도는 낮지만, 메세지 schema에 대한 의존성이 높기 때문인데, schema registry는 이를 보완하기 위해 고안되었다.</description></item><item><title>Kafka란?</title><link>https://jo-minjun.github.io/notes/kafka/</link><pubDate>Fri, 01 Jul 2022 12:51:30 +0900</pubDate><guid>https://jo-minjun.github.io/notes/kafka/</guid><description>1. kafka 란? apache kafka는 오픈 소스 분산 이벤트 스트리밍 플랫폼이다.
*데이터 파이프 라인 구성시, 주로 사용되는 오픈 소스로 대용량 실시간 로그 처리에 특화되어 많은 사람들이 사용하고 있다.
*데이터 파이프 라인: 데이터 처리 단계의 출력이 다음 단계의 입력으로 이어지는 형태로 연결된 구조를 가리킨다.
2. kafka의 특성 2.1. Publisher-Subscriber 모델 Publisher-Subscriber 모델은 중간에 데이터 큐를 두고 서로 간 독립적으로 데이터를 생산하고 소비한다.
이러한 구조를 통해, Publisher나 Subscriber에 장애가 생겨도, 독립적이기 때문에 안정적으로 데이터를 처리할 수 있다.</description></item></channel></rss>